/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define NAVIG   3
#define FUNCT   4
#define ADJST   5
#define MO_TOG(layer) &mo_tog layer layer   // Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // --------------------------------------------------------------------------------------
            // |  TAB |  Q   |  W   |  E   |  R   |  T  |   |  Y  |  U   |  I   |  O   |  P  | BKSP |
            // | CTRL |  A   |  S   |  D   |  F   |  G  |   |  H  |  J   |  K   |  L   |  ;  |   '  |
            // | SHFT |CTL(Z)|ALT(X)|SFT(C)|CTL(V)|  B  |   |  N  |CTL(M)|SFT(,)|ALT(.)|  /  |RETURN|
            //                         | LGUI | LWR |  SPACE  | RSE | FUNC |

            bindings = <
      &kp ESCAPE        &kp Q       &kp W          &kp E        &kp R  &kp T                &kp Y        &kp U            &kp I         &kp O     &kp P  &kp MINUS
      &kp LSHIFT        &kp A       &kp S          &kp D        &kp F  &kp G                &kp H        &kp J            &kp K         &kp L  &kp SEMI    &kp SQT
      &kp LCTRL         &kp Z       &kp X          &kp C        &kp V  &kp B                &kp N        &kp M            &kp COMMA     &kp DOT  &kp FSLH   &kp RWIN
                                           &kp BACKSPACE      &kp DEL         &lt 2 RETURN           &kp SPACE            MO_TOG(1)
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------
            // | DEL |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |     |     |     |     |     |     |   |  `  |  -  |  =  |  [  |  ]  |  \  |
            // |     |     | GUI |     |     | CAPS|   | PRSC|     |     |     |     |     |
            //                       |     | ADJ | BKSP |    |     |

            bindings = <
  &trans  &kp N1  &kp N2              &kp N3  &kp N4  &kp N5             &kp N6          &kp N7     &kp N8          &kp N9           &kp N0  &kp EQUAL
  &kp CLCK  &trans  &trans              &trans  &trans  &trans          &kp GRAVE       &kp MINUS  &kp EQUAL        &kp LBKT         &kp RBKT   &kp BSLH
  &trans  &trans  &trans  &trans   &mo 3  &trans          &kp PSCRN  &kp UNDERSCORE     &trans  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp SLASH
                                      &trans  &trans          &trans                     &trans      &to 0
            >;
        };

        navig_layer {
            // -----------------------------------------------------------------------------
            // | DEL |     |     |     |     |     |   |     |     |     |     |     | DEL |
            // |     |     |     |     |     |     |   |     |LEFT |DOWN | UP  |RIGHT|     |
            // |     |     |     |     |     |CAPS |   |     |HOME |PG-DN|PG-UP| END |     |
            //                        |     |     |     |     |     |

            bindings = <
&kp LC(LA(DELETE))  &trans  &trans  &trans  &trans  &trans            &trans     &kp PG_UP    &kp UP  &kp PAGE_DOWN   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &kp HOME      &kp LEFT  &kp DOWN      &kp RIGHT  &kp END  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans        &trans    &trans         &trans   &trans  &trans
                        &trans  &trans          &trans            &kp LEFT_WIN    &trans
            >;
        };

        funct_layer {
            // -----------------------------------------------------------------------------
            // | DEL |     |     |     |     |     |   |     |     |     |     |     | DEL |
            // |     |     |     |     |     |     |   | F1  | F2  | F3  | F4  | F5  | F6  |
            // |     |     |     |     |     |  '  |   | F7  | F8  | F9  | F10 | F11 | F12 |
            //                        |     |     |     |     |     |

            bindings = <
    &kp F1      &kp F2  &kp F3  &kp F4  &kp F5   &kp F6                &kp F7        &kp F8        &kp F9       &kp F10       &kp F11     &kp F12
&bl BL_INC  &bl BL_TOG  &trans  &trans  &trans   &trans          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&bl BL_DEC      &trans  &trans  &trans  &trans  &kp SQT                &trans        &trans        &trans        &trans        &trans      &trans
                                &trans  &trans           &trans                      &trans        &trans
            >;
        };
    };
};
